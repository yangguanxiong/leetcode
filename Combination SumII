public class Solution {
    public ArrayList<ArrayList<Integer>> combinationSum2(int[] num, int target) {
        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
        if (num.length == 0) return result;
        Arrays.sort(num);
        ArrayList<Integer> sub = new ArrayList<Integer>();
        combinationSum2Helper(num, target, 0, sub, result);
        return result;
    }
    
    public void combinationSum2Helper(int[] num, int target, int idx, ArrayList<Integer> sub, ArrayList<ArrayList<Integer>> result){
        if (target == 0){
            ArrayList<Integer> clone = new ArrayList<Integer>(sub);
            result.add(clone);
            return;
        }
        
        for (int i = idx; i < num.length && target >= num[i]; i++){
            if  (i > idx && num[i] == num[i-1]) continue;
            sub.add(num[i]);
            combinationSum2Helper(num, target - num[i], i + 1, sub, result);
            sub.remove(sub.size() - 1);
        }
    }
}
