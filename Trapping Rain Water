public class Solution {
    public int trap(int[] A) {
        int n = A.length;
        if (n < 3) return 0;
        int[] left = new int[n];
        int[] right = new int[n];
        
        int lmax = A[0];
        for (int i = 0; i < n; i++){
            lmax = Math.max(lmax, A[i]);
            left[i] = lmax;
        }
        int rmax = A[n - 1];
        for (int j = n - 1; j >= 0; j--){
            rmax = Math.max(rmax, A[j]);
            right[j] = rmax;
        }
        
        int result = 0;
        for (int i = 0; i < n; i++){
            result += Math.min(left[i], right[i]) - A[i];
        }
        return result;
    }
}
