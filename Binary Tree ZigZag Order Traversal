/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ArrayList<ArrayList<Integer>> zigzagLevelOrder(TreeNode root) {
        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
        ArrayList<Integer> level = new ArrayList<Integer>();
        Queue<TreeNode> q = new LinkedList<TreeNode>();
        
        if (root != null){
            q.add(root);       
        }
        int cur = 1;
        int next = 0;
        boolean LtoR = true;
        
        while(!q.isEmpty()){
            TreeNode n = q.poll();
            level.add(n.val);
            cur--;
            if (n.left != null){
                q.add(n.left);
                next++;
            }
            if (n.right != null){
                q.add(n.right);
                next++;
            }
            if (cur == 0){
                if (!LtoR){
                    Collections.reverse(level);
                    LtoR = true;
                } else {
                    LtoR = false;
                }
                cur = next;
                next = 0;
                result.add(level);
                level = new ArrayList<Integer>();
            }
        }
        return result;
    }
}
