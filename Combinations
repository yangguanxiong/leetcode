public class Solution {
    
    public ArrayList<ArrayList<Integer>> combine(int n, int k) {
        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
        if (n < 1 || k <= 0 || n < k) return result;
        ArrayList<Integer> sub = new ArrayList<Integer>();
        
        findCombinations(n, k, 1, result, sub);
        return result;
    }
    
    public void findCombinations(int n , int k, int idx, ArrayList<ArrayList<Integer>> result, ArrayList<Integer> sub){
        if (sub.size() == k){
            ArrayList<Integer> clone = new ArrayList<Integer>(sub);
            result.add(clone);
            return;
        }
        
        for(int i = idx; i <= n; i++){
            sub.add(i);
            findCombinations(n, k, i + 1, result, sub);
            sub.remove(sub.size() - 1);
        }
    }
    
  
}
