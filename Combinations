public class Solution {
    
    public ArrayList<ArrayList<Integer>> combine(int n, int k){
        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
        if (k > n || n < 1 || k <= 0) return result;
        ArrayList<Integer> sub = new ArrayList<Integer>();
        findCombination(n, k, 1, sub, result);
        return result;
    }
    
    public void findCombination(int n, int k, int idx, ArrayList<Integer> sub, ArrayList<ArrayList<Integer>> result){
        if (sub.size() == k){
            ArrayList<Integer> clone = new ArrayList<Integer>(sub);
            result.add(clone);
            return;
        }
        for (int i = idx; i <= n; i++){
            sub.add(i);
            findCombination(n, k, i + 1, sub, result);
            sub.remove(sub.size() - 1);
        }
    }
}
