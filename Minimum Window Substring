public class Solution {
    public String minWindow(String S, String T) {
        String result = new String();
        if (T.length() == 0 || S.length() == 0) return result;
        
        int[] need = new int[256];
        int[] found = new int[256];
        
        for (int i = 0; i < T.length() ; i++){
            need[T.charAt(i)]++;
        }
        int count = 0;
        int rStart = -1; 
        int rEnd = S.length();
        for (int start = 0, end = 0; end < S.length(); end++){
            if(need[S.charAt(end)] == 0){
                continue;
            }
            if (found[S.charAt(end)] < need[S.charAt(end)]){
                count++;
            }
            found[S.charAt(end)]++;
            if (count != T.length()) continue;
            //update start
            for( ; start < end; start++){
                if (need[S.charAt(start)] == 0) continue;
                if (found[S.charAt(start)] <= need[S.charAt(start)]) break;
                found[S.charAt(start)]--;
            }
            //update result
            if (end - start < rEnd - rStart){
                rEnd = end;
                rStart = start;
            }
        }
        
        if (rStart == -1) return result;
        result = S.substring(rStart, rEnd + 1);
        return result;
        
    }
}
