public class Solution {
    public int minCut(String s) {
        if (s.length() <= 1 ) return 0;
        boolean[] isP = new boolean[s.length()];
        int[] dp = new int[s.length()];  //num of cut
        dp[0] = 0;
        for (int i = 1; i < s.length(); i++){
            isP[i] = true;
            dp[i] = dp[i - 1] + 1;
            for (int j = 0; j < i; j++){
                isP[j] = (s.charAt(i) == s.charAt(j)) ? isP[j+1] : false;  // isP[j] == true -> [j...i] is a palindrome
                                                                            // isP[j+1] == true -> [j+1...i-1] is a palindrome
                
                if (isP[j]){
                    dp[i] = (j == 0) ? 0 : Math.min(dp[i], dp[j-1] + 1);    // dp[i] -> minCount for [0...i]
                }
            }
        }
        return dp[dp.length - 1];
        
    }
}
