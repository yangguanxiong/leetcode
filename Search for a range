public int[] searchRange(int[] A, int target) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if (A.length == 0 ) return new int[]{-1, -1};
        if (A.length == 1){
            if (A[0] == target) return new int[]{0,0};
            return new int[]{-1, -1};
        }
        int[] result = new int[2];
        
        int mid = A.length/2;
        int l = mid;
        int r = mid;
        
        if (A[mid] == target){
            
            while (A[l] == target){
                l--;
                if (l < 0){
                    result[0] = 0;
                    break;
                }
            }
            if (l >= 0) result[0] = l+1;
            
            while(A[r] ==target){
                r++;
                if (r > A.length -1){
                    result[1] = r - 1;
                    break;
                }
            }
            if (r <= A.length - 1) result[1] = r-1;
            
            return result;
        }
        
        if (A[mid] < target){
            //search upper half
            int[] Asub = Arrays.copyOfRange(A, mid +1, A.length);
            result = searchRange(Asub, target);
            if (result[0] == -1) return result;
            result[0] += mid + 1;
            result[1] += mid + 1;
            return result;
        } else {
            int[] Asub = Arrays.copyOfRange(A, 0, mid);
            return searchRange(Asub, target);
            
        }
