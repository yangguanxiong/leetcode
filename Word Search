public class Solution {
    public boolean exist(char[][] board, String word) {
        if (word.length() == 0) return false;
        if (board.length == 0 || board[0].length == 0) return false;
        for (int i = 0; i < board.length; i++){
            for (int j = 0; j < board[0].length; j++){
                if (wordExist(board, word, i, j, 0)) return true;
            }
        }
        return false;
    }
    public boolean wordExist(char[][] board, String word, int i, int j, int idx){
        if (word.charAt(idx) != board[i][j]) return false;
        if (idx == word.length() - 1) return true;
        idx++;
        board[i][j] = '-';
        if (i - 1 >= 0){
            if (wordExist(board, word, i - 1, j, idx)) return true;
        }
        if (i + 1 < board.length){
            if (wordExist(board, word, i + 1, j, idx)) return true;
        }
        if (j - 1 >= 0){
            if (wordExist(board, word, i , j - 1, idx)) return true;
        }
        if (j + 1 < board[i].length){
            if (wordExist(board, word, i, j + 1, idx)) return true;
        }
        board[i][j] = word.charAt(idx - 1);
        return false;
    }
}
