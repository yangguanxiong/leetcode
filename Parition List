/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode partition(ListNode head, int x) {
       if (head == null || head.next == null) return head;
       ListNode before = null;
       ListNode beforeHead = null;
       ListNode after = null;
       ListNode afterHead = null;
       ListNode n = head;
       
       while(n != null){
           if (n.val < x){
               //append to before
               if (beforeHead == null){
                   before = new ListNode(n.val);
                   beforeHead = before;
               } else {
                   before.next = new ListNode(n.val);
                   before = before.next;
               }
           } else {
               //append to after
               if (afterHead == null){
                   after = new ListNode(n.val);
                   afterHead = after;
               }else {
                   after.next = new ListNode(n.val);
                   after = after.next;
               }
           }
           n = n.next;
       }
       if (before != null){
          before.next = afterHead;
          return beforeHead;
       }
       return afterHead;
       
    }
}
