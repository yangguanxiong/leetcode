/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode reverseBetween(ListNode head, int m, int n) {
        if(head == null || head.next == null) return head;
        ListNode bigHead = new ListNode(0);
        bigHead.next = head;
        ListNode start = bigHead;
        for (int i = 0; i < m -1 ; i++){
            start = start.next;
        }
        ListNode cur = start.next;
        for (int i = 0; i < n-m; i++){
            ListNode move = cur.next;
            cur.next = move.next;
            move.next = start.next;
            start.next = move;
        }
        return bigHead.next;
    }
}
