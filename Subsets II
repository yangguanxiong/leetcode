public class Solution {
    public ArrayList<ArrayList<Integer>> subsetsWithDup(int[] num) {
        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
        ArrayList<Integer> sub = new ArrayList<Integer>();
        Arrays.sort(num);
        for (int i = 0; i <= num.length; i++){
            findSubsets(num, i, 0 , result, sub);
        }
        return result;
    }
    
    public void findSubsets(int[] num, int count, int idx, ArrayList<ArrayList<Integer>> result, ArrayList<Integer> sub){
        if (sub.size() == count){
            ArrayList<Integer> clone = new ArrayList<Integer>(sub);
            result.add(clone);
            return;
        }
        for (int i = idx; i < num.length; i++){
            if (i > idx && num[i] == num[i-1]) continue;
            sub.add(num[i]);
            findSubsets(num, count, i + 1, result, sub);
            sub.remove(sub.size() - 1);
        }
    }
}
