 public static ArrayList<ArrayList<Integer>> combinationSum(int[] candidates, int target) {
	        // Start typing your Java solution below
	        // DO NOT write main() function
	        Arrays.sort(candidates);
	        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
	        ArrayList<Integer> sub = new ArrayList<Integer>();
	        
	        if (target < candidates[0]){
//	            result.add(sub);
	            return result;
	        }
	        
	        
	        for (int i = 0; i < candidates.length; i++){
	        	sub = new ArrayList<Integer>();
	            
	            if (candidates[i] == target){
	                sub.add(candidates[i]);
	                result.add(sub);
	                return result;
	                
	            } else{
	            	
	            	ArrayList<ArrayList<Integer>> subResult = combinationSum(candidates, target - candidates[i]);
		            
		            for (int j = 0; j < subResult.size() ; j++){
		                sub = subResult.get(j);
		                if (sub.size() != 0){
		                	sub.add(0, candidates[i]);
		                	//System.out.println("can: " + candidates[i]);
		                	Collections.sort(sub);
		                	if (!result.contains(sub)){
		                		result.add(subResult.get(j));
		                		
		                	}		                	
		                }		                		                
		            }	            	
	            }  
	        }
	        return result;
	    }
