public class Solution {
    public ArrayList<ArrayList<Integer>> combinationSum(int[] candidates, int target) {
        // Note: The Solution object is instantiated only once and is reused by each test case.
        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
        ArrayList<Integer> sub = new ArrayList<Integer>();
        if (candidates.length == 0) return result;
        Arrays.sort(candidates);
        if (target < candidates[0]) return result;
        combinationSum(candidates, target, result, sub, 0);
        return result;
    }
    
    public void combinationSum(int[] candidates, int target, ArrayList<ArrayList<Integer>> result, ArrayList<Integer> sub, int idx){
        for (int i = idx ; i < candidates.length; i++){
            if (i > 0 && candidates[i] == candidates[i - 1]) continue;
            if (target == candidates[i]){
                ArrayList<Integer> clone = new ArrayList<Integer>(sub);
                clone.add(candidates[i]);
                result.add(clone);
            } else if (target < candidates[i]){
                //sub.clear();
                return;
            } else {
                target -= candidates[i];
                sub.add(candidates[i]);
                combinationSum(candidates, target, result, sub, i);
                target += candidates[i];
                sub.remove(sub.size() - 1);
            }
        }
    }
}
